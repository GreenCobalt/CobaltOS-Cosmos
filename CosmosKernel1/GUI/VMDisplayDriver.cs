using Cosmos.HAL;
using Cosmos.System.Graphics;
using CosmosKernel1.Image;
using CosmosKernel1.Utils;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Reflection.Metadata.Ecma335;
using System.Runtime.CompilerServices;
using System.Runtime.ConstrainedExecution;
using System.Runtime.InteropServices;
using System.Text;
using System.Xml.Linq;

namespace CosmosKernel1
{
    class VMDisplayDriver
    {
        public static int screenW = 640;
        public static int screenH = 480;

        public static uint[] SBuffer;

        private static Cosmos.HAL.Drivers.PCI.Video.VMWareSVGAII driver = new Cosmos.HAL.Drivers.PCI.Video.VMWareSVGAII();

        public static void initScreen()
        {
            driver.SetMode(Convert.ToUInt32(screenW), Convert.ToUInt32(screenH));

            SBuffer = new uint[(screenW * screenH) + screenW];

            Cosmos.System.MouseManager.ScreenWidth = Convert.ToUInt32(screenW);
            Cosmos.System.MouseManager.ScreenHeight = Convert.ToUInt32(screenH);

            GUIManager.init();
        }

        public static void changeRes(int x, int y)
        {
            screenW = x;
            screenH = y;
            Cosmos.System.MouseManager.ScreenWidth = Convert.ToUInt32(screenW);
            Cosmos.System.MouseManager.ScreenHeight = Convert.ToUInt32(screenH);
            SBuffer = new uint[(screenW * screenH) + screenW];
            GUIManager.updateScreenSize(screenW, screenH);
            driver.SetMode(Convert.ToUInt32(screenW), Convert.ToUInt32(screenH));
        }

        public static void exitGUI()
        {
            Kernel.graphicsMode = false;
            driver.Disable();
        }

        public static void drawScreen()
        {
            for (int y = 0, h = screenH; y < h; y++)
            {
                for (int x = 0, w = screenW; x < w; x++)
                {
                    if (!(SBuffer[(y * screenW) + x] == driver.GetPixel((uint) x, (uint) y)))
                    {
                        driver.SetPixel((uint)x, (uint)y, SBuffer[(y * screenW) + x]);
                    }
                }
            }
            driver.Update(0,0,(uint)screenW, (uint)screenH);
        }

        private static void setPixel(int x, int y, Color color)
        {
            if (x > screenW - 1 || y > screenH - 1)
            {
                return;
            }

            SBuffer[(y * screenW) + x] = (uint) color.ToArgb();
        }

        public static void addImage(String path, int locX, int locY)
        {
            //String s = FSCache.getFile(path);

            String s = "64,64;30,48,25,33,57,26,0,50,51,39,21,46,24,0,10,0,4,0,54,54,60,57,46,47,31,38,72,74,52,67,77,52,18,47,47,31,38,11,37,7,0,8,5,31,14,48,14,3,85,131,29,0,40,29,21,19,7,27,29,17,7,23,28,36,1,45,60,52,51,72,47,0,63,77,64,49,17,0,8,5,0,6,16,38,71,68,69,51,57,66,40,55,68,39,39,46,51,25,31,53,41,57,2,49,19,6,23,32,4,17,0,0,16,46,50,22,1,23,14,18,24,9,23,46,15,0,29,40,3,42,63,73,53,56,68,54,36,23,57,55,3,0,21,0,0,6,8,0,49,50,63,59,54,66,51,71,73,51,64,60,55,53,12,36,33,39,67,3,40,89,21,1,40,31,51,47,68,38,55,26,26,0,24,27,12,23,0,23,34,30,0,21,3,49,56,68,57,52,61,52,24,23,48,62,71,23,6,14,2,3,0,14,0,31,66,55,57,62,51,49,61,59,63,74,57,59,87,10,48,61,30,36,3,5,1,12,37,10,29,70,0,37,30,42,12,37,5,6,53,7,30,0,22,28,19,2,16,52,64,79,50,41,67,68,7,25,61,53,59,46,22,0,3,41,27,18,36,38,25,70,63,52,47,53,66,64,53,53,77,58,49,61,14,35,49,58,47,26,0,17,4,55,10,68,70,19,27,48,40,8,26,7,8,35,13,42,0,6,22,28,20,52,57,66,49,47,66,67,22,34,62,59,55,53,53,43,69,84,0,1,6,52,42,3,63,60,59,58,55,65,64,38,65,54,53,56,68,25,31,51,47,51,39,1,0,34,55,0,58,75,36,34,36,15,13,40,3,3,34,6,68,178,41,0,32,66,60,60,63,59,53,63,9,41,58,69,68,61,54,64,71,15,7,26,10,39,89,61,6,45,70,51,40,49,53,65,59,53,55,61,38,78,47,12,50,48,50,31,12,9,33,0,1,46,80,3,8,30,23,18,32,25,1,25,29,67,0,49,19,54,65,72,69,58,46,56,18,45,36,52,60,58,50,72,66,24,28,27,23,35,64,62,41,7,55,60,49,69,51,51,61,63,48,44,59,50,66,46,0,50,49,22,25,23,12,2,9,0,34,86,28,29,51,20,22,20,26,6,22,22,0,9,29,40,54,22,66,67,37,49,3,53,62,74,87,79,60,58,57,41,10,18,7,4,29,68,61,63,17,41,70,66,57,53,54,49,47,56,58,51,48,50,40,13,29,53,26,2,15,27,11,11,0,41,97,24,0,42,18,35,28,17,1,32,0,25,21,47,29,24,53,56,75,54,36,69,76,74,41,68,47,72,75,55,6,19,17,17,15,46,67,54,69,26,27,63,80,52,47,54,47,58,61,46,50,52,60,75,10,45,23,20,8,34,65,73,0,0,17,84,12,9,27,40,28,29,31,0,0,16,29,42,17,26,37,3,39,20,70,54,67,45,71,35,73,68,77,52,26,15,35,19,25,44,50,68,80,55,23,29,57,68,61,52,48,48,55,54,47,58,65,42,76,7,10,12,21,12,66,48,40,0,0,22,58,47,3,32,32,46,15,37,0,37,36,14,16,52,16,31,54,35,49,72,68,75,21,0,0,43,75,33,14,10,18,41,59,52,20,41,63,69,67,50,18,61,59,58,54,48,59,60,46,51,47,57,55,57,24,18,41,59,23,55,43,31,0,0,10,68,62,14,25,21,7,26,37,8,53,11,39,15,18,0,54,68,43,65,46,78,32,0,12,3,43,56,0,0,10,79,52,56,70,41,49,63,67,64,46,5,51,64,59,55,52,51,56,52,60,57,45,33,0,3,0,48,56,39,39,57,44,0,41,28,57,67,8,36,56,34,0,13,29,26,15,34,0,8,42,39,15,31,53,18,0,3,7,0,4,39,64,14,11,6,61,56,61,56,3,51,61,37,36,53,6,41,74,51,52,67,53,71,61,55,62,52,0,13,18,18,48,57,48,24,47,43,8,3,0,54,55,3,9,6,136,72,65,48,20,38,113,2,34,19,16,34,88,79,0,7,44,16,1,14,9,33,16,1,11,7,36,55,0,37,38,56,0,24,58,0,34,59,51,62,54,51,61,60,46,47,20,4,27,48,43,59,72,64,35,64,54,9,1,0,45,60,1,0,87,68,39,45,8,100,168,17,13,26,13,43,7,39,31,61,6,7,22,16,0,71,59,2,0,7,36,43,4,59,38,43,15,7,12,61,17,23,58,55,63,45,53,61,53,40,24,15,25,35,45,24,50,66,74,36,58,32,22,13,5,37,56,15,4,2,40,19,48,87,23,38,28,35,34,23,24,7,48,95,0,46,40,11,48,63,35,0,0,50,41,18,0,30,73,46,0,0,0,13,57,20,26,69,66,50,51,64,46,42,9,13,39,71,44,32,30,42,47,75,17,0,8,0,74,51,41,38,11,0,19,24,33,26,57,62,24,67,72,21,2,0,32,32,22,44,24,30,33,51,17,0,58,51,18,22,84,40,61,47,22,16,31,8,35,42,25,12,64,67,49,55,60,41,29,0,3,42,69,58,49,51,48,40,76,44,40,23,65,36,45,23,64,21,57,48,43,20,52,47,100,56,70,27,0,5,28,46,39,12,0,84,39,33,31,3,43,23,63,83,34,42,66,64,22,34,2,0,24,46,36,34,37,56,48,70,62,46,22,18,19,44,67,35,59,26,49,55,27,5,64,67,0,10,79,39,44,35,56,76,39,23,8,6,36,26,53,85,31,12,49,41,34,46,35,78,8,53,60,0,49,51,48,36,75,44,46,31,33,9,14,7,24,40,53,42,55,16,38,68,52,42,8,7,17,59,51,53,71,74,61,53,25,8,63,53,52,13,49,5,53,61,49,52,60,63,49,0,27,49,54,44,34,45,24,34,17,64,14,43,5,144,150,15,34,49,42,19,41,42,49,40,5,16,28,7,0,42,57,61,49,47,12,66,77,58,49,3,0,36,59,50,56,61,45,36,0,41,32,50,59,73,0,18,61,36,56,72,58,58,77,46,24,41,17,41,47,31,24,73,113,32,34,59,2,21,60,31,5,55,65,74,23,19,32,11,28,22,0,0,0,0,36,56,38,50,47,12,50,65,50,34,7,59,56,47,54,71,53,40,47,45,79,52,37,63,67,13,0,4,84,12,55,42,48,60,69,54,52,43,48,91,50,107,134,47,81,83,0,9,35,18,2,0,43,69,52,10,19,7,21,0,9,56,12,5,0,25,49,37,28,55,9,44,62,41,11,14,58,75,57,54,63,51,69,52,162,114,9,40,70,72,30,9,46,66,50,0,0,38,68,41,38,16,30,184,105,0,0,55,85,66,39,38,26,35,4,3,3,34,53,11,13,30,9,0,45,65,7,0,3,0,16,56,54,49,57,23,28,52,15,6,32,44,57,66,73,58,45,59,68,30,21,30,44,51,41,20,55,86,50,38,7,42,55,40,48,120,7,66,10,74,107,34,9,61,66,60,61,106,27,24,0,10,3,2,9,9,3,0,19,0,0,44,40,7,0,9,45,47,43,51,38,8,6,0,0,24,18,2,50,67,52,50,45,46,47,43,11,55,30,62,25,61,49,34,34,52,49,11,106,162,45,29,2,109,133,35,5,63,64,127,93,45,71,58,17,4,74,40,0,14,84,44,6,0,11,56,29,0,4,1,11,37,35,42,27,43,0,0,7,0,4,11,0,42,47,61,48,37,47,27,47,38,28,41,28,26,67,45,32,62,33,0,44,16,40,8,14,0,0,42,105,62,33,117,97,42,101,42,42,51,148,98,0,32,172,67,0,95,109,12,2,0,11,1,11,57,22,29,46,42,38,4,0,5,1,0,2,0,21,56,56,45,44,50,31,45,32,38,57,37,32,125,35,6,22,38,8,38,46,96,0,4,0,81,147,49,37,0,25,87,60,101,38,96,71,1,14,36,24,0,5,110,90,2,0,0,0,3,43,55,62,61,45,53,58,35,6,2,24,23,0,0,25,85,57,54,47,49,28,65,41,33,36,42,55,26,0,0,0,42,31,23,31,6,38,68,14,18,25,8,164,134,24,75,55,49,44,46,2,4,25,29,0,0,24,8,0,1,0,0,59,47,12,47,96,20,33,60,48,43,40,17,151,95,17,19,42,30,45,25,29,40,0,39,66,23,0,50,49,64,151,67,3,42,40,26,6,63,85,74,37,47,61,46,83,93,49,66,81,171,90,47,30,0,22,37,0,35,11,11,11,2,11,8,149,124,16,51,64,57,0,13,55,52,25,16,59,32,0,4,0,44,46,28,21,37,32,44,87,29,53,3,35,47,112,41,0,52,25,25,45,87,17,32,55,26,38,80,43,60,62,82,104,113,69,69,37,7,27,35,22,13,109,117,10,5,0,17,50,25,2,0,147,120,0,4,32,35,32,2,1,5,12,5,37,42,36,19,6,41,7,35,60,29,28,26,5,53,26,2,0,66,13,11,137,138,38,39,42,127,131,11,31,106,67,77,86,55,28,67,6,0,28,35,39,4,107,95,0,15,4,37,8,0,0,1,38,21,2,1,44,30,36,0,0,0,7,11,67,41,44,29,36,36,20,51,40,38,39,57,83,6,29,39,0,100,44,25,32,44,3,47,32,101,108,0,94,48,58,70,83,64,57,70,10,0,39,33,0,40,51,10,55,124,45,41,22,0,0,10,0,0,36,45,31,45,39,5,32,102,22,13,53,53,45,7,32,54,30,29,24,34,66,107,168,7,91,73,66,83,24,0,66,42,0,130,98,58,74,51,113,124,79,95,73,48,71,91,19,35,33,16,11,30,65,76,69,105,23,23,46,26,1,1,0,23,35,24,29,37,74,1,47,163,55,0,51,69,55,64,102,1,31,9,68,31,88,89,4,63,69,79,87,41,40,32,154,144,13,110,95,51,36,64,66,181,89,91,67,49,157,171,67,40,18,0,68,149,67,10,89,19,32,25,52,33,12,0,77,150,52,0,67,63,25,1,66,49,0,5,59,56,56,103,152,0,52,40,42,29,70,101,85,98,77,46,64,18,33,39,58,91,30,0,46,76,0,46,86,10,54,155,128,70,87,48,42,32,141,84,30,53,7,11,7,78,175,56,48,57,2,0,43,65,17,8,39,27,0,32,58,28,15,0,36,48,40,35,1,0,52,15,5,35,56,72,111,83,50,60,71,49,31,76,63,63,67,55,1,68,110,32,119,30,52,89,107,77,117,80,79,25,117,49,60,85,11,12,19,15,54,0,14,29,53,0,5,4,0,0,0,1,10,80,22,3,60,78,38,43,45,37,5,3,18,48,0,81,38,70,85,95,92,49,176,99,0,48,87,63,72,73,52,76,178,78,70,23,58,72,77,108,91,94,73,19,96,25,2,0,0,42,58,21,4,16,10,56,29,55,8,0,9,0,2,29,92,29,0,14,9,30,35,43,44,37,1,0,15,27,52,28,54,61,102,89,80,83,61,0,0,11,71,85,65,87,63,37,5,50,70,80,142,43,69,109,66,64,55,40,51,30,106,63,12,41,20,23,2,102,127,58,47,31,53,13,1,4,0,81,167,8,4,0,6,53,29,33,67,46,0,14,1,64,30,30,22,0,85,89,77,89,96,78,13,0,13,47,62,52,66,82,69,32,61,86,126,65,64,68,77,49,48,40,83,84,116,77,32,21,35,17,9,54,101,76,77,59,30,6,97,106,3,45,13,3,5,0,11,86,75,56,61,57,0,29,8,34,46,46,22,0,1,79,93,84,112,100,67,0,86,61,113,143,56,54,88,47,62,103,0,64,31,58,80,66,57,25,29,34,7,0,54,14,38,44,58,39,6,31,31,95,55,1,80,75,23,5,0,9,1,0,1,18,74,46,36,55,6,14,11,66,30,9,34,71,20,0,72,101,77,79,82,15,102,37,111,121,59,66,74,76,64,61,77,25,28,97,85,112,63,75,0,62,53,54,17,24,22,66,40,40,61,64,12,18,28,98,20,14,11,7,52,8,5,3,0,0,6,3,0,23,32,5,0,5,29,49,66,0,0,37,33,68,79,78,55,71,86,132,56,1,79,77,66,93,71,46,39,25,55,52,59,42,52,74,0,71,28,36,30,34,49,94,3,40,24,46,17,21,32,43,21,10,11,31,59,12,16,13,17,15,0,13,10,35,31,79,54,25,49,21,76,68,4,140,128,3,77,86,65,24,54,81,133,26,49,74,45,80,67,59,47,55,83,53,60,19,22,34,84,157,85,21,34,14,77,113,63,109,16,4,0,0,0,10,15,27,42,0,0,5,18,0,17,0,10,43,18,14,48,110,86,120,109,21,81,87,85,41,62,40,78,75,56,29,10,58,195,82,47,96,91,72,68,25,77,41,3,94,62,41,73,47,42,62,50,6,27,3,77,164,43,16,135,109,13,20,38,9,21,14,2,6,5,24,20,21,42,25,37,51,20,7,7,3,8,1,0,27,93,92,62,82,63,74,105,88,49,76,16,0,22,110,99,68,104,85,68,73,52,52,48,17,77,68,0,59,67,15,26,27,8,0,20,93,1,0,91,73,23,16,4,9,30,70,40,15,41,37,33,44,31,20,14,13,31,37,36,4,71,80,55,16,68,74,39,43,61,37,94,97,93,34,57,30,0,6,58,123,77,91,66,67,84,86,40,25,36,38,50,39,45,16,39,5,5,0,105,104,0,47,32,16,17,16,28,30,26,163,105,26,38,17,14,8,28,56,97,79,20,8,29,7,79,95,26,38,73,61,20,70,84,88,46,105,109,65,42,101,58,3,33,92,96,53,108,38,71,73,66,68,48,0,84,49,21,34,54,27,0,75,109,18,35,63,49,14,19,23,77,60,90,67,17,52,31,78,118,41,34,23,127,116,29,37,67,27,34,7,31,138,64,60,83,25,3,12,76,55,85,25,57,111,117,62,60,49,87,53,71,74,62,45,91,67,35,80,0,55,88,57,59,61,41,90,0,87,162,60,22,37,43,77,72,8,35,23,46,0,81,78,71,52,112,109,0,3,22,60,27,38,67,23,43,95,63,98,55,43,57,11,67,101,29,67,9,38,98,94,50,61,95,95,69,90,31,49,74,46,49,30,29,48,2,78,31,17,110,18,2,59,49,38,48,73,62,149,114,14,69,65,37,0,34,9,5,53,121,100,53,78,24,50,54,36,36,57,36,28,92,89,85,48,93,24,82,179,51,20,56,0,68,85,41,73,77,96,84,50,42,105,34,75,45,23,57,32,26,18,5,31,98,29,69,41,49,105,114,32,36,0,12,54,43,62,58,49,53,16,22,70,58,0,80,162,41,17,34,55,51,0,36,18,94,84,79,93,59,58,39,42,52,27,34,69,87,50,76,57,48,89,65,100,36,1,73,18,26,68,14,46,79,3,0,34,113,53,86,30,48,62,63,34,8,25,34,61,40,67,52,19,11,35,59,41,31,37,12,32,42,12,45,50,20,19,32,42,61,74,99,76,75,66,71,106,70,71,70,65,43,66,92,54,61,64,96,43,30,33,38,0,14,32,50,51,0,7,0,11,83,75,64,26,7,7,32,33,24,13,83,47,39,57,41,31,46,0,59,68,38,22,34,0,18,68,61,41,16,23,25,56,35,79,87,87,36,72,51,111,98,93,94,35,42,36,46,92,72,31,104,0,41,157,82,12,19,22,41,31,12,0,22,48,44,35,72,19,1,34,30,24,25,41,39,43,24,86,32,51,14,5,51,30,62,38,35,43,85,149,60,34,37,0,20,4,38,14,64,89,50,59,90,50,89,104,83,52,25,59,64,17,31,7,25,61,46,116,221,169,15,4,10,4,1,4,27,41,47,33,36,2,22,29,73,77,32,48,39,20,33,37,32,63,6,78,75,61,45,29,53,68,20,26,24,30,48,108,39,8,49,34,112,87,50,81,64,44,64,71,101,65,0,45,75,66,0,9,2,47,8,0,171,255,162,0,0,0,4,23,38,0,54,47,6,11,29,11,68,53,69,25,28,83,64,23,116,60,24,86,84,39,96,68,67,23,9,43,146,101,51,101,86,1,66,2,15,144,79,41,79,53,36,85,65,57,41,25,12,72,12,10,2,44,59,5,116,207,235,162,1,0,4,7,10,62,3,0,13,34,13,109,36,32,82,57,59,150,78,49,120,66,82,74,46,31,10,18,28,23,14,56,57,9,41,24,70,42,85,67,65,18,101,32,47,97,65,72,59,73,0,74,60,0,18,4,80,118,48,47,100,46,186,235,115,32,3,0,25,61,2,9,49,55,68,0,45,78,13,84,77,6,19,46,19,72,50,56,39,102,36,39,27,30,22,66,32,42,38,21,52,0,63,70,50,72,70,92,71,9,63,64,48,101,62,39,32,62,2,0,102,122,51,131,156,54,78,127,177,177,16,0,12,46,54,2,52,41,74,58,82,28,51,16,39,39,38,17,56,51,41,41,115,41,43,81,40,15,40,67,54,44,41,16,7,46,51,88,96,92,95,43,75,95,43,2,101,37,78,77,132,55,40,12,130,115,111,229,184,65,0,35,87,34,0,37,37,28,46,48,49,66,0,2,43,70,84,36,32,40,36,42,34,62,101,29,42,28,108,28,35,82,10,57,56,56,61,57,0,23,2,3,64,128,66,76,76,59,53,2,34,4,50,59,156,74,67,54,131,110,213,234,69,7,21,21,1,0,42,45,20,33,61,26,47,67,57,0,56,71,1,20,32,0,82,97,14,104,151,37,15,48,27,32,60,95,39,61,63,67,76,40,102,71,84,9,37,84,131,78,63,107,48,69,53,84,97,105,77,6,5,107,145,183,251,187,18,9,21,0,9,11,35,32,14,11,34,2,27,9,42,33,12,0,0,41,42,89,62,10,94,8,2,8,0,1,0,64,141,114,78,58,74,93,56,30,88,69,93,71,53,1,77,143,104,72,72,60,60,64,58,88,140,36,57,88,213,245,200,34,0,12,12,29,31,24,17,37,8,27,0,0,37,28,52,61,35,0,0,51,57,19,36,55,0,56,91,2,20,5,62,96,5,5,0,0,50,45,26,27,8,0,63,74,71,45,46,19,138,97,48,76,109,127,158,100,52,58,35,29,212,223,57,48,12,33,33,0,21,13,18,0,46,17,20,35,44,11,43,33,3,7,5,46,83,0,41,31,11,29,17,46,27,43,73,169,28,85,58,55,30,53,25,44,26,28;92,94,106,101,109,78,9,61,127,107,66,107,63,39,36,47,37,34,103,104,108,114,110,110,115,101,110,126,120,108,136,195,114,113,100,77,76,45,86,49,24,35,73,97,52,57,46,51,112,168,75,5,64,65,77,62,9,70,92,69,36,85,123,119,72,95,131,112,100,128,79,24,133,131,114,125,62,36,41,48,50,45,31,69,132,125,121,103,120,120,99,121,130,98,106,124,211,126,83,113,86,97,14,92,62,23,57,80,33,90,19,20,53,112,81,76,0,56,79,56,74,13,73,107,69,24,80,120,88,97,122,123,102,118,118,101,109,87,107,121,52,30,51,47,53,44,38,16,88,115,116,96,130,120,99,131,136,101,113,122,114,203,143,91,113,79,103,16,73,107,72,17,95,87,104,119,94,134,140,68,90,7,39,79,41,99,4,66,98,67,5,91,94,112,108,116,109,118,126,106,110,100,102,122,124,64,28,56,47,47,38,69,39,64,116,97,125,125,102,104,125,108,101,130,117,93,209,164,77,109,70,91,34,50,30,42,80,57,70,177,136,53,123,130,40,85,15,47,89,32,108,10,54,84,83,37,101,116,114,132,107,104,133,114,66,66,105,123,123,105,79,44,37,81,83,70,92,84,48,106,123,110,100,109,122,112,99,115,124,97,84,174,181,72,96,104,107,60,10,36,40,100,26,102,219,149,52,81,90,45,92,34,17,98,37,95,27,67,92,91,87,113,103,125,108,103,133,111,96,89,110,121,118,106,105,100,131,141,20,21,41,100,96,35,109,115,106,107,117,113,109,108,114,112,95,83,162,199,90,103,106,81,73,19,24,44,95,5,97,217,174,49,82,80,46,92,58,0,86,61,121,218,109,75,81,119,97,118,119,106,123,109,93,107,102,115,130,113,103,133,136,48,45,81,71,102,135,92,30,97,119,100,112,115,96,113,120,92,95,113,84,153,205,82,100,104,86,88,26,39,79,35,11,63,219,188,32,78,91,54,79,68,17,81,74,110,35,99,53,101,98,126,119,100,118,109,101,99,84,108,122,112,109,132,116,90,92,89,87,94,121,121,100,31,79,114,112,118,97,106,111,113,104,102,105,79,117,208,88,95,86,60,105,93,41,24,35,16,58,205,215,80,71,84,72,81,69,17,64,74,12,20,88,88,104,47,111,108,107,107,67,112,101,156,132,134,96,128,114,101,80,53,15,4,63,114,113,117,51,65,111,121,110,104,113,112,103,105,114,101,93,104,209,114,82,112,88,86,99,95,53,47,22,28,209,220,94,81,89,65,74,76,7,58,72,84,69,105,79,74,110,92,125,121,120,109,124,146,91,111,102,121,125,111,79,91,84,90,98,119,116,109,111,57,68,111,122,94,105,117,100,107,115,96,95,104,99,202,128,84,82,93,77,97,108,118,7,42,0,178,234,93,57,79,74,59,84,36,20,38,101,83,89,65,85,37,96,89,118,112,131,120,146,68,90,118,138,115,102,102,114,95,73,59,101,111,131,103,59,68,100,92,114,111,100,93,107,104,92,108,114,89,193,171,139,141,170,136,116,113,89,27,33,2,126,223,93,73,74,80,52,84,5,121,93,66,82,89,69,88,102,83,77,163,142,145,47,38,24,84,131,96,83,98,95,129,125,92,59,85,113,118,111,86,47,85,107,112,102,91,109,108,88,100,109,112,89,147,174,150,131,184,169,88,112,101,30,23,0,142,236,152,72,99,86,45,88,21,96,69,90,58,77,39,112,104,96,141,101,146,55,48,43,38,90,88,2,13,23,134,123,127,112,67,95,120,104,100,87,26,91,111,102,97,101,97,98,100,109,87,88,79,63,74,67,77,146,186,70,98,98,25,116,110,96,225,156,94,109,90,50,91,78,66,71,80,52,27,104,88,58,102,120,63,32,46,43,33,22,66,113,91,97,108,153,122,102,94,37,91,112,80,67,84,42,84,113,90,99,111,92,119,102,91,96,88,31,44,59,68,101,130,206,87,102,116,45,43,18,71,231,182,2,0,200,164,96,86,79,94,179,52,71,74,72,91,148,130,21,38,91,73,98,105,93,92,49,24,40,24,94,91,24,73,82,99,35,53,89,40,72,97,97,106,93,95,116,114,93,116,87,63,67,107,82,89,142,221,110,105,102,38,17,32,60,214,205,26,130,131,80,82,70,143,231,73,80,75,60,102,49,101,54,133,58,37,45,69,100,165,128,41,28,33,102,91,24,83,88,90,46,38,42,99,53,59,104,99,102,89,103,103,101,88,88,83,91,81,74,69,80,117,200,115,103,125,132,116,111,89,183,211,53,5,84,78,80,155,54,86,71,99,72,69,107,29,93,164,2,78,96,103,137,126,90,35,33,104,109,59,6,63,120,108,57,34,24,33,82,53,55,103,110,92,107,112,91,96,75,81,96,114,84,83,82,72,104,197,134,66,23,29,108,98,91,172,206,82,77,67,78,66,96,108,72,135,110,92,47,27,72,88,61,101,77,117,109,102,56,21,86,110,56,65,120,70,104,112,56,49,83,62,83,81,60,48,97,96,97,97,98,87,92,71,71,103,114,91,73,91,102,97,180,216,222,109,117,47,89,85,157,219,100,80,109,53,102,71,147,112,117,72,31,38,60,86,105,84,21,146,89,75,68,20,81,96,126,135,76,100,123,118,69,81,48,42,60,83,81,67,63,98,105,121,113,105,93,93,87,103,106,91,111,73,82,93,97,85,153,225,87,46,165,100,95,136,102,117,87,57,63,31,83,57,84,134,102,31,93,112,90,119,55,130,45,98,110,22,83,111,115,104,132,124,123,111,101,42,81,82,86,80,88,77,80,36,85,116,110,114,92,89,87,116,104,98,106,108,87,89,89,72,102,106,221,140,98,55,98,81,106,122,116,111,78,24,71,101,90,117,95,113,127,108,32,159,47,89,32,183,211,59,77,111,113,88,100,96,111,116,52,67,60,27,16,76,88,91,88,92,38,92,107,97,94,47,24,59,104,103,116,113,97,85,37,105,81,94,113,217,136,45,130,89,131,145,115,112,106,104,66,96,50,119,109,122,108,117,173,74,112,132,45,52,110,74,31,95,112,128,84,94,94,62,65,71,34,48,48,29,63,91,81,78,81,42,79,99,98,96,81,139,104,93,116,129,109,95,91,104,151,127,92,126,218,171,31,43,141,74,116,90,77,106,112,112,104,99,95,168,102,109,196,79,156,152,42,31,76,68,22,31,76,126,114,83,67,55,79,36,58,96,49,44,37,61,92,84,84,101,45,79,107,104,93,110,149,114,94,124,125,84,102,109,217,181,65,95,106,190,178,72,98,120,89,15,19,61,124,97,93,102,66,212,156,16,0,131,144,127,96,62,65,85,16,32,31,73,105,80,81,93,40,30,119,140,69,45,48,33,51,94,100,87,88,52,66,105,87,89,117,147,126,97,100,105,111,114,102,66,94,57,85,98,161,181,99,161,86,78,74,113,102,103,104,189,43,115,74,89,198,109,52,108,136,133,126,183,106,70,38,28,27,44,54,38,25,56,81,41,53,98,87,36,36,48,92,91,83,86,68,45,54,52,52,77,67,43,85,106,105,115,93,92,74,76,50,91,89,156,61,125,101,57,92,93,116,63,152,225,92,83,68,137,196,74,41,105,121,198,167,110,123,98,71,28,133,116,42,66,156,119,33,24,54,139,93,57,56,57,38,77,80,91,81,90,37,41,52,46,52,52,30,81,95,119,96,80,106,63,83,81,79,100,59,49,117,105,59,121,88,31,86,63,95,76,76,18,25,73,189,121,67,153,161,121,159,65,94,92,209,157,39,88,225,117,15,164,182,59,59,53,63,33,53,98,75,86,93,87,87,45,47,59,60,57,52,46,75,115,104,95,92,104,58,81,75,80,77,75,70,158,115,79,21,89,32,90,115,154,22,38,24,127,196,102,105,50,62,134,122,152,102,150,106,21,56,91,57,36,34,173,170,50,44,58,47,24,114,128,112,95,79,89,98,92,39,45,76,75,47,29,67,130,108,103,99,90,68,89,94,77,77,73,94,59,79,54,22,98,56,64,80,73,65,108,48,93,67,37,209,190,60,114,119,121,94,78,31,33,70,82,31,32,72,52,28,59,61,47,102,146,90,110,153,65,61,93,96,91,108,94,237,183,98,95,117,108,96,98,97,92,24,99,108,75,11,107,87,91,225,133,7,117,53,82,42,132,116,143,93,106,157,98,99,118,104,138,145,222,140,89,86,50,63,81,27,77,100,63,53,61,63,50,210,224,58,107,122,116,55,62,90,88,60,55,104,75,28,39,28,89,108,107,108,101,101,94,129,74,89,14,76,92,156,92,25,106,49,94,64,173,58,93,109,73,120,157,110,119,115,135,157,165,144,157,117,48,67,88,74,84,179,195,91,55,46,64,102,65,38,36,206,187,51,52,72,64,73,46,44,43,42,38,78,93,95,85,63,117,66,71,95,72,80,38,8,82,70,30,26,123,39,104,159,226,69,89,98,164,218,63,80,163,111,123,150,121,67,137,75,33,73,101,89,49,147,140,47,67,34,88,65,38,52,59,93,69,46,40,79,67,97,55,52,42,48,56,126,111,90,63,83,79,51,80,75,81,91,99,179,75,79,96,16,163,104,96,58,87,34,114,86,163,160,56,153,107,113,129,147,135,128,141,34,31,116,107,35,113,132,42,79,206,114,72,67,42,66,50,52,38,92,129,73,77,98,40,76,175,120,38,109,110,96,48,83,120,80,73,71,78,138,166,234,78,160,136,121,151,114,19,104,127,21,197,160,88,117,92,158,178,142,162,139,110,124,168,73,94,101,65,40,105,166,143,110,161,76,59,88,103,72,46,54,87,100,77,72,106,151,36,104,219,117,24,94,117,111,132,156,31,86,56,111,76,160,152,77,120,124,150,153,121,113,108,199,208,41,153,143,99,78,102,103,224,143,155,135,119,194,239,129,106,89,32,97,222,136,74,153,56,100,87,106,132,73,41,118,221,112,23,112,143,99,33,137,92,27,46,95,90,113,159,194,37,99,105,97,72,132,167,151,167,122,72,122,114,110,129,108,138,69,25,54,157,18,85,136,70,115,214,187,132,149,121,99,90,214,138,58,97,42,54,80,124,231,120,63,83,47,55,75,122,75,37,98,83,35,79,130,75,56,44,79,73,95,70,33,32,91,44,33,57,115,146,184,140,89,96,130,126,100,142,111,124,120,97,14,118,157,84,174,84,104,142,165,141,174,142,131,75,184,107,106,145,91,73,89,69,80,59,55,58,89,53,44,60,51,53,62,41,51,159,81,54,109,133,93,74,96,76,43,41,57,86,50,141,126,129,140,157,163,115,227,159,38,105,135,129,123,113,90,109,229,129,126,86,126,136,128,151,148,163,142,71,149,63,49,59,23,65,116,89,76,108,100,103,62,107,57,42,66,54,64,68,149,132,43,64,55,83,93,92,89,92,50,45,49,77,103,80,125,137,143,162,170,154,138,27,35,38,119,142,99,125,101,97,58,101,122,136,202,105,124,156,116,122,115,88,110,81,172,143,85,116,92,94,89,156,204,99,87,76,112,60,50,71,46,125,232,95,55,57,50,119,81,99,102,100,39,61,81,137,97,98,72,56,134,176,168,146,166,122,41,37,36,72,107,108,114,136,106,79,118,149,187,120,116,120,146,100,93,77,155,159,189,136,88,107,50,58,54,88,172,168,134,113,103,46,148,198,65,97,70,56,63,63,60,170,122,131,113,89,31,86,66,100,115,108,84,31,21,117,171,162,175,162,126,18,146,103,149,209,96,134,150,120,125,142,19,137,99,119,143,127,93,82,70,73,33,45,115,55,104,86,113,65,7,62,81,163,129,38,130,134,100,55,50,52,58,60,58,43,155,82,90,110,89,40,49,135,135,137,127,135,31,5,124,174,173,166,171,84,146,101,148,187,98,132,141,121,99,121,147,55,71,166,159,182,126,134,19,130,123,96,66,75,75,159,113,85,99,138,75,84,97,151,66,68,64,61,134,73,54,56,32,29,75,35,33,73,111,100,80,126,93,118,140,59,23,77,111,134,172,165,148,142,171,182,141,17,145,138,124,151,113,112,106,73,103,115,127,120,102,129,52,138,75,95,94,95,76,174,39,82,81,141,112,69,48,106,94,73,50,80,144,88,78,102,95,104,99,87,106,121,100,160,134,105,131,109,157,133,39,183,217,76,167,168,145,63,143,142,200,88,88,153,113,120,135,111,95,107,151,106,109,87,72,100,128,223,137,89,96,75,123,206,114,184,73,68,55,40,55,81,81,48,92,77,62,71,57,63,53,48,46,72,57,83,79,188,158,143,209,123,159,164,149,67,116,97,165,167,133,69,46,115,237,175,82,167,152,111,111,68,152,76,28,163,112,89,136,112,95,124,127,75,102,62,102,218,61,72,194,185,45,84,110,83,45,87,54,88,104,132,113,131,131,137,126,160,159,143,113,93,89,2,64,89,162,158,133,125,138,136,174,149,121,147,42,38,65,143,165,124,154,137,117,144,111,104,104,64,125,120,16,135,122,88,67,100,62,56,58,187,54,41,132,127,83,93,53,53,100,152,132,54,131,145,151,163,148,141,98,117,120,118,129,121,161,190,107,84,131,147,122,102,141,76,151,155,160,119,122,89,19,34,97,180,127,167,146,128,145,157,122,70,84,84,98,92,103,70,87,50,66,39,145,166,45,89,70,78,74,71,116,97,94,234,175,115,139,104,94,47,97,136,169,189,68,33,66,22,97,170,83,122,148,154,102,111,148,122,119,163,178,134,147,155,107,34,70,130,178,113,160,112,136,137,113,153,99,64,147,122,64,98,101,71,41,118,183,74,129,155,117,89,67,81,147,141,172,131,106,154,92,135,207,95,146,117,181,184,98,127,163,81,84,55,113,215,146,145,166,55,64,45,157,113,158,113,123,158,179,112,116,104,144,109,130,126,124,120,173,135,104,129,16,96,135,100,127,126,86,186,69,125,228,130,74,86,95,144,163,86,128,120,151,86,145,148,135,140,199,194,108,128,120,148,114,114,160,65,58,155,136,168,155,121,93,55,108,171,97,116,30,88,148,154,134,129,152,168,133,144,67,111,147,124,78,100,104,74,42,160,84,47,186,108,36,104,103,99,118,146,107,211,185,103,157,146,116,61,97,124,128,137,201,161,128,167,77,100,143,136,137,116,103,157,153,162,138,118,157,90,125,228,106,59,116,60,142,148,116,144,150,171,143,87,106,158,90,150,113,73,123,75,55,83,64,60,194,93,127,99,99,178,198,51,106,54,93,118,127,143,151,154,166,142,140,166,130,91,162,225,119,106,128,138,168,117,149,107,126,145,158,171,117,117,111,115,85,82,105,126,164,95,140,99,105,158,143,172,81,59,143,79,85,145,46,100,155,53,52,64,186,100,152,96,102,107,129,89,55,88,92,123,114,152,162,123,134,127,149,124,139,164,124,135,154,143,148,123,138,169,133,84,116,133,163,155,163,157,156,167,133,125,135,123,105,149,160,118,124,120,163,127,92,87,101,66,68,97,128,98,34,85,65,49,156,123,105,106,52,45,100,83,74,68,160,118,121,157,142,138,118,30,121,165,161,152,151,105,121,180,170,140,90,71,58,88,105,146,160,162,137,136,106,164,175,174,167,119,129,116,121,183,132,101,163,41,117,222,137,69,64,88,125,106,75,59,84,110,85,114,142,78,55,83,80,62,92,105,120,132,132,161,127,143,58,42,131,154,156,123,97,76,112,213,116,102,124,82,94,104,177,81,129,148,127,140,138,83,156,177,169,127,95,122,108,97,92,60,75,132,105,167,255,216,85,68,83,85,77,63,85,124,113,88,91,49,91,88,133,145,83,94,108,110,119,108,86,127,19,136,166,149,132,84,117,151,110,77,61,89,92,188,119,2,183,178,189,174,85,139,122,127,146,144,162,134,25,120,142,137,57,53,51,110,81,52,200,255,207,77,89,74,85,127,126,24,143,122,43,77,103,49,115,148,122,78,91,139,132,83,194,138,105,180,143,100,166,140,161,148,166,130,209,201,117,171,151,0,240,135,139,206,190,126,134,81,97,144,118,118,111,95,73,161,94,53,65,136,112,48,171,250,249,219,90,73,82,89,82,134,59,53,70,90,75,175,107,105,151,106,117,208,132,98,189,136,181,171,146,119,112,135,131,137,139,152,131,59,118,112,125,129,145,197,209,207,194,148,124,145,117,141,108,123,56,128,123,67,64,52,132,222,131,118,145,117,234,255,199,128,77,62,71,125,60,61,97,102,121,57,103,134,93,154,116,68,112,116,62,159,160,156,102,168,148,160,128,126,129,156,143,144,95,67,157,105,164,205,123,177,236,183,178,76,138,118,107,173,122,117,92,126,54,49,175,205,112,194,217,95,169,207,242,243,71,34,71,133,120,56,106,100,125,107,138,87,82,85,127,133,133,134,162,142,157,109,182,151,128,142,144,127,128,173,153,136,126,47,66,91,129,171,237,158,157,223,195,207,167,125,169,115,157,155,184,125,99,18,178,206,174,255,255,152,90,133,163,66,31,95,103,113,82,115,117,113,36,44,89,132,154,99,126,127,88,94,131,162,186,90,104,102,175,130,165,157,80,138,142,146,164,130,78,87,12,18,110,252,169,146,229,183,140,99,75,14,64,92,207,156,138,73,216,231,225,255,165,76,79,82,74,50,90,110,86,78,120,90,122,140,114,46,126,155,102,107,106,57,165,173,75,146,219,98,58,101,121,105,99,178,84,137,162,147,156,115,165,172,169,23,94,127,242,200,117,241,195,203,217,236,246,235,164,49,72,166,243,255,251,199,96,84,89,61,57,88,112,84,78,70,100,50,81,77,103,92,83,75,39,97,102,151,123,98,152,9,48,100,99,71,70,137,195,208,144,119,156,158,125,123,153,155,195,158,121,42,100,243,217,103,177,172,135,115,103,135,237,174,92,112,255,255,220,82,110,118,113,111,90,85,90,99,64,109,50,71,99,71,119,141,102,62,64,102,125,99,64,79,48,139,144,38,77,80,125,166,90,85,59,5,114,146,121,147,130,44,96,193,167,144,121,27,201,234,142,207,229,247,255,221,144,164,96,79,232,229,111,134,98,106,121,94,97,84,83,62,121,50,84,83,95,72,95,83,64,70,53,119,137,26,117,96,51,77,65,149,142,126,119,229,124,168,207,238,166,145,144,129,134,153;76,85,93,93,93,57,8,58,108,99,46,87,35,26,19,35,21,17,92,94,96,104,95,88,100,90,90,105,103,83,115,198,85,80,79,70,68,35,68,35,19,22,41,71,41,53,32,55,111,154,51,0,57,48,63,48,0,59,76,48,23,69,98,103,54,81,113,100,82,109,77,20,111,116,97,113,37,25,27,27,28,32,18,58,117,100,100,94,94,105,90,107,111,85,92,97,199,120,67,89,70,78,12,78,53,0,54,56,8,69,0,1,33,95,70,73,6,30,54,48,64,3,51,96,54,11,67,101,68,79,101,109,84,102,113,92,88,77,90,104,29,19,34,26,30,27,33,0,65,97,100,88,111,105,84,114,120,87,92,94,101,182,125,87,103,67,74,19,74,80,52,5,65,85,88,93,89,113,124,59,63,9,28,63,40,75,1,49,83,59,1,69,74,90,89,101,93,104,113,87,96,94,90,105,103,49,4,30,31,30,17,58,28,50,109,83,102,114,89,84,110,97,81,104,100,74,193,140,64,85,70,83,35,30,9,25,78,54,59,162,134,53,95,90,30,77,13,32,77,33,84,3,38,70,68,19,81,94,100,123,94,90,116,90,36,41,88,111,108,99,69,22,15,59,69,58,85,77,27,92,99,100,91,90,105,100,87,99,106,86,66,162,161,70,74,73,83,50,7,25,40,80,0,99,208,128,56,59,73,37,68,21,13,72,34,79,11,40,70,75,73,93,96,116,92,89,113,87,74,71,95,105,102,97,89,75,112,131,2,0,11,73,84,31,85,111,97,86,103,105,96,96,115,90,86,76,155,170,69,87,76,76,58,7,10,30,73,1,84,202,157,53,58,67,35,68,28,0,67,43,105,196,77,67,70,103,95,108,100,91,104,97,76,95,85,91,116,101,85,110,118,26,34,70,48,76,116,81,3,93,113,79,103,113,82,89,100,93,83,101,75,137,183,82,90,87,65,66,14,22,79,21,1,57,196,158,32,63,68,45,61,47,17,64,51,93,26,85,46,86,96,114,97,86,104,105,83,80,69,91,108,100,93,103,106,81,77,70,72,81,108,108,94,16,60,99,98,107,85,86,101,91,90,92,96,70,111,188,85,72,78,55,76,69,20,8,9,6,55,192,186,60,69,69,55,61,52,11,50,58,4,17,75,80,94,41,98,102,97,91,57,96,88,125,119,116,91,109,104,84,68,35,4,0,65,107,92,105,41,50,100,110,94,91,97,98,86,87,100,87,77,92,186,103,66,94,72,71,75,72,39,18,7,30,181,180,67,77,74,48,55,60,0,51,49,51,45,95,62,72,97,78,103,107,115,87,100,125,69,102,98,98,111,92,62,70,64,69,77,87,95,101,102,42,57,99,108,85,89,103,84,89,100,82,79,92,86,185,128,71,49,64,61,60,97,98,2,26,0,166,208,69,57,56,62,47,63,4,7,49,87,58,75,52,61,18,77,78,94,96,112,104,138,54,68,101,111,89,81,83,91,83,70,55,88,97,125,95,38,52,94,85,98,98,84,77,95,90,76,98,91,86,180,152,131,128,147,129,87,100,59,17,13,0,133,211,91,62,60,70,32,81,2,97,74,50,68,75,48,84,81,68,46,150,137,111,30,18,12,66,117,85,70,76,53,95,104,80,43,75,106,107,94,72,41,85,92,100,87,77,99,96,74,89,102,89,67,130,136,124,119,173,150,77,89,67,19,22,0,113,210,125,57,84,75,39,82,12,82,66,70,49,61,30,102,90,80,117,83,114,39,27,32,20,72,84,4,14,2,114,105,112,98,48,86,113,84,86,88,25,79,102,91,83,90,85,84,88,103,82,82,72,56,51,46,73,153,159,71,83,71,7,91,94,85,208,129,91,112,59,19,67,72,59,57,73,33,6,97,82,41,84,95,38,15,29,22,19,13,53,92,64,56,75,127,96,84,77,22,79,99,66,56,81,30,75,102,77,90,101,79,107,96,77,81,76,24,33,48,61,80,143,189,71,82,93,18,21,3,68,191,159,5,0,181,126,85,78,66,87,158,38,44,66,65,66,119,110,2,8,69,66,73,78,76,76,38,15,27,0,78,74,7,61,72,85,18,37,78,33,61,86,90,96,80,85,98,102,78,100,67,57,55,79,69,72,130,192,94,90,90,29,17,11,52,183,169,8,113,105,74,74,54,122,203,54,60,54,54,72,25,75,45,112,46,13,36,48,77,131,103,25,28,28,88,76,7,68,81,75,19,15,30,91,44,47,97,89,89,79,93,94,93,76,69,51,74,84,73,68,68,116,198,104,80,99,94,87,90,73,169,185,18,0,67,62,66,144,43,65,60,89,67,57,74,10,73,136,3,59,77,75,109,104,70,26,23,77,86,48,4,61,98,80,39,27,14,19,74,49,46,93,100,78,90,97,78,81,61,64,77,93,77,63,70,67,103,193,112,30,24,18,86,92,86,150,181,51,67,53,65,56,83,101,64,137,114,69,19,24,60,71,48,94,68,98,88,82,33,5,76,89,30,48,106,53,87,99,27,23,62,47,71,70,54,46,93,90,89,88,87,75,78,62,66,102,79,87,73,72,83,93,178,207,189,80,116,44,79,71,141,184,79,66,100,54,92,68,138,117,102,59,18,16,44,79,93,63,10,127,67,61,48,2,76,85,110,116,55,90,110,103,51,63,29,26,43,69,73,53,46,89,95,108,93,80,66,68,67,87,83,84,114,79,78,70,73,56,128,196,73,10,136,92,82,130,78,99,72,50,59,23,77,46,76,111,75,20,83,82,76,96,45,111,25,90,96,3,73,94,90,93,128,126,108,92,90,31,56,66,72,68,82,76,81,34,70,101,94,93,68,65,65,97,98,85,93,101,73,68,74,57,86,109,201,106,87,29,75,79,81,103,109,96,69,0,61,89,81,100,80,102,89,91,31,122,33,65,7,170,196,42,68,92,95,77,91,77,85,97,34,66,53,13,4,69,77,74,72,76,33,87,102,84,74,23,2,38,100,94,104,101,85,67,23,110,60,89,110,188,112,32,133,73,115,124,111,93,100,88,52,76,46,92,93,102,84,100,144,60,112,115,24,32,84,53,14,69,103,109,57,74,78,49,45,53,16,31,37,18,50,85,79,68,74,37,73,89,83,82,71,134,92,74,100,113,95,84,81,110,130,111,72,104,181,154,29,20,119,60,115,82,64,94,95,96,83,85,92,129,78,107,177,63,148,129,28,10,49,54,12,17,72,116,88,60,43,43,69,11,37,74,29,28,20,44,75,69,67,89,36,66,87,78,69,89,117,91,80,105,106,80,98,84,185,149,39,87,97,168,139,61,79,115,73,9,0,52,110,83,85,76,54,208,131,7,2,119,126,100,89,47,42,78,7,26,15,60,93,64,58,71,13,16,83,112,41,21,32,21,38,86,81,76,85,48,55,84,61,62,87,121,103,94,99,87,90,96,95,49,85,38,82,83,152,149,94,136,65,80,54,86,87,87,97,161,34,94,55,76,159,84,43,99,129,122,101,163,88,39,17,16,24,30,29,13,4,46,62,16,29,71,65,23,28,32,83,81,73,73,51,25,33,31,32,56,46,25,72,93,89,97,85,80,52,60,39,77,73,146,59,106,92,48,70,56,114,51,143,199,77,59,51,127,170,51,32,91,99,171,138,85,107,88,56,1,115,95,14,57,147,91,20,6,28,112,59,37,35,26,28,67,64,70,62,72,22,32,36,25,31,34,16,68,80,103,88,66,100,51,74,75,66,82,51,45,110,93,40,103,65,32,77,41,75,53,60,0,9,65,153,103,64,148,142,98,143,56,75,67,186,127,10,74,204,76,10,141,144,25,37,24,39,29,39,80,59,73,75,71,76,34,29,35,32,32,30,28,56,97,92,81,80,101,48,76,64,59,79,55,62,147,96,65,0,83,17,81,104,132,3,16,19,120,185,81,85,31,42,125,121,139,92,147,100,0,35,73,35,24,28,147,141,29,34,36,29,16,87,111,102,88,76,77,76,70,25,28,52,51,26,14,53,117,88,82,80,72,58,74,88,60,74,62,83,33,63,31,0,91,45,53,74,65,58,86,33,80,53,9,184,173,43,101,109,107,84,64,22,24,57,66,14,26,48,47,12,31,39,35,73,109,63,84,143,61,51,79,81,67,79,60,199,143,61,64,89,81,71,81,77,71,5,97,94,59,6,82,88,90,184,112,0,92,39,68,42,119,113,132,76,76,121,79,99,122,93,112,118,202,133,63,57,30,52,64,0,53,67,39,27,28,30,29,183,178,34,88,100,91,38,44,77,83,47,39,84,54,11,26,17,76,89,89,95,82,97,84,115,54,75,0,85,88,132,79,6,79,42,69,55,147,47,82,90,55,104,142,96,103,99,119,141,149,143,142,91,21,48,67,46,69,148,156,59,29,33,42,78,39,21,12,181,162,23,31,62,58,58,29,27,26,30,27,67,80,79,71,41,110,60,59,82,58,71,29,6,78,60,14,8,101,34,76,147,181,39,75,84,162,176,20,57,162,106,114,140,107,39,118,64,15,50,75,60,41,147,124,26,55,17,75,52,24,32,37,70,45,22,17,61,53,74,31,29,23,33,40,108,89,78,41,65,62,36,71,69,72,82,73,134,40,62,86,1,135,99,66,39,73,2,94,86,137,144,42,140,94,102,116,137,129,117,104,10,27,82,78,20,87,114,28,72,173,86,64,42,26,34,38,25,6,73,124,71,39,73,22,52,137,73,30,95,100,83,30,70,115,66,63,65,73,124,150,198,60,149,114,113,134,100,0,81,104,18,189,134,71,106,81,145,166,131,148,122,91,120,134,46,85,72,44,24,73,115,104,95,144,55,50,67,83,49,30,34,68,82,61,61,90,124,18,85,205,89,14,83,93,92,115,132,0,66,38,94,63,146,141,60,107,113,135,144,107,92,99,179,186,31,136,131,91,76,94,89,207,124,136,115,97,186,207,103,94,62,14,88,201,120,52,146,48,77,56,87,109,53,17,100,203,88,0,89,136,77,17,114,86,10,31,90,71,94,140,168,13,77,99,89,61,128,155,127,156,118,55,106,93,104,100,98,132,46,0,51,156,2,72,126,58,100,196,169,113,142,104,89,80,185,107,42,87,24,33,59,117,217,89,52,76,27,25,56,97,47,16,70,69,20,57,97,53,31,21,73,74,87,52,14,15,78,31,23,48,109,136,173,127,76,84,109,99,84,125,99,109,123,83,0,113,142,68,156,65,85,126,155,138,161,126,119,58,159,79,94,143,84,72,65,66,73,36,37,54,75,27,28,34,27,37,36,19,33,126,48,22,86,110,73,75,90,60,26,24,44,75,49,148,123,111,141,150,148,101,195,147,10,101,127,112,134,101,70,98,209,109,107,70,115,129,122,142,144,152,126,50,133,43,31,40,4,49,88,69,67,77,71,88,48,86,36,21,44,32,36,45,119,94,21,38,43,62,59,74,69,74,27,21,18,55,83,64,114,125,137,151,156,139,120,13,25,13,119,135,92,105,90,85,49,88,103,117,185,91,113,147,102,106,98,67,104,68,151,117,62,88,71,71,74,129,189,96,80,60,84,38,27,39,19,101,202,65,35,32,40,95,57,78,77,85,21,34,67,120,77,81,65,33,113,157,157,139,147,105,31,27,27,52,106,94,106,117,98,70,108,133,167,100,97,104,121,87,85,63,153,139,160,106,59,81,46,67,41,73,145,140,136,108,77,27,128,170,49,76,48,35,35,29,42,143,119,123,112,75,13,73,50,88,104,94,68,22,7,118,159,150,153,155,105,7,129,94,147,183,89,115,136,106,111,129,0,126,79,99,132,112,81,69,64,50,14,36,92,37,92,62,95,60,0,59,74,143,112,24,125,113,80,33,23,31,36,36,36,37,130,82,78,99,56,35,41,110,107,97,105,128,13,0,108,160,152,147,158,61,129,82,134,173,75,115,121,108,86,109,137,38,54,141,142,160,115,113,1,119,123,72,45,62,59,143,96,69,91,140,61,72,86,130,47,56,43,30,98,43,31,35,21,25,50,21,22,59,81,70,53,94,83,114,118,53,0,67,87,108,150,152,122,127,139,180,118,0,121,123,114,141,99,115,107,58,82,101,104,96,80,99,37,118,57,77,67,75,63,160,25,49,59,111,82,61,41,92,62,47,27,59,124,57,40,50,60,74,68,65,70,80,84,123,108,79,103,81,151,127,9,162,192,53,150,159,119,47,115,134,192,57,75,135,117,98,130,114,95,91,140,97,88,70,55,76,104,197,113,66,82,55,116,172,94,152,60,34,36,14,27,54,67,28,75,52,39,47,44,47,56,44,44,63,44,58,68,164,125,146,163,85,139,158,139,60,101,87,150,154,127,62,17,102,235,149,76,144,141,100,105,51,148,63,8,150,110,77,137,94,79,96,112,47,65,29,94,191,52,53,185,149,29,57,74,66,18,76,23,72,81,108,97,105,110,101,96,118,124,107,89,64,71,0,40,58,146,149,122,116,134,135,161,134,125,151,23,24,51,121,156,110,140,128,106,138,98,92,90,42,129,116,0,126,111,67,37,79,35,37,38,160,33,17,126,112,59,75,32,43,76,104,106,43,95,110,117,133,118,109,86,100,102,112,95,87,125,144,88,55,120,138,104,84,124,63,144,157,152,111,123,68,6,3,93,176,117,155,132,120,137,139,110,54,76,65,86,65,93,46,72,27,34,18,123,140,19,65,47,50,64,48,101,72,71,207,144,97,128,91,72,34,69,107,148,155,44,15,46,9,94,142,79,107,120,143,81,96,138,112,113,147,143,137,119,155,86,14,74,125,169,101,141,95,111,122,91,142,74,43,131,99,43,83,92,61,19,101,166,36,98,148,97,69,43,71,135,109,141,109,93,128,65,110,170,83,118,95,166,149,87,98,130,57,58,40,80,195,122,129,139,31,53,41,156,97,137,103,111,140,172,98,102,86,143,95,117,125,120,95,140,103,81,108,1,97,129,79,116,120,73,162,46,102,204,108,70,80,86,130,140,39,82,83,126,62,126,126,104,118,174,159,71,86,100,120,95,83,134,56,54,138,127,144,143,106,79,50,93,152,68,86,5,90,153,154,131,109,145,157,123,141,53,92,124,112,62,76,84,67,54,163,57,23,174,84,0,84,84,76,106,137,72,183,158,82,135,121,93,38,75,109,103,98,175,138,108,142,61,90,130,93,98,95,78,105,142,151,132,96,150,64,108,210,95,36,104,49,137,144,122,150,141,158,127,73,106,142,73,149,108,47,106,61,46,84,48,27,177,66,99,83,92,164,174,6,82,29,87,108,124,130,135,134,148,128,118,133,94,77,146,199,80,81,113,105,131,82,122,86,124,134,147,147,107,104,109,98,71,71,90,96,144,70,140,97,86,142,135,163,61,43,133,68,57,139,27,88,146,27,33,40,163,85,135,79,97,82,96,69,40,84,89,119,104,132,140,89,106,108,144,106,107,127,91,114,133,113,131,109,111,131,106,70,98,132,160,156,141,144,148,168,111,98,117,101,86,140,143,99,108,101,149,115,66,60,79,47,49,67,108,83,9,52,36,41,150,123,80,87,32,19,80,73,69,60,157,103,100,135,115,111,97,4,114,155,133,116,124,96,107,128,128,124,61,56,59,62,95,138,134,158,131,136,86,148,160,161,146,102,114,99,105,175,115,91,145,4,93,204,117,44,44,52,86,81,53,31,56,91,67,127,135,48,28,65,63,45,84,90,102,111,117,133,116,136,65,28,114,142,129,107,83,60,114,194,90,94,109,58,72,85,166,56,116,139,112,127,117,72,148,166,155,99,64,94,79,95,69,44,53,109,77,154,245,201,66,37,42,41,41,33,57,103,96,68,73,19,63,72,128,122,63,70,85,93,100,85,59,112,2,120,146,127,125,73,110,145,86,57,34,73,63,142,81,0,164,173,180,164,67,117,119,137,130,130,147,130,0,112,122,114,29,29,30,84,67,55,203,250,172,42,54,42,48,86,92,0,118,94,16,65,74,20,100,118,118,69,80,120,112,54,170,114,73,161,122,92,166,126,134,118,120,132,175,155,105,159,121,3,214,124,120,190,172,91,142,83,89,135,102,107,99,73,41,140,66,27,37,108,85,39,167,239,249,194,60,43,43,53,49,101,33,28,48,71,59,161,92,91,162,95,89,180,120,77,166,126,144,151,122,104,91,108,117,108,124,126,102,49,98,90,117,104,128,200,216,191,172,134,94,130,86,125,90,113,49,113,107,48,40,44,120,215,113,103,120,99,213,251,172,78,41,40,35,106,38,40,76,84,105,41,87,115,71,144,117,67,84,85,33,129,129,122,88,156,120,128,105,109,109,144,125,123,106,60,117,68,156,192,112,164,208,184,158,44,125,94,89,164,105,102,63,92,14,29,164,189,92,183,209,80,134,178,217,219,48,20,58,108,108,37,91,91,112,89,121,71,74,69,99,111,115,112,138,134,131,92,168,110,105,143,115,99,100,137,144,120,115,32,53,83,114,162,231,144,153,221,186,191,148,109,131,88,139,147,168,125,93,1,154,193,175,241,220,127,59,89,139,59,16,79,91,97,53,101,106,91,12,20,65,113,132,83,104,93,67,75,111,138,151,70,85,66,155,122,141,144,73,120,140,129,135,101,63,80,26,0,101,233,158,134,220,159,115,91,60,0,47,76,182,135,151,76,200,223,228,248,120,29,51,59,42,17,69,85,60,74,95,68,109,126,92,19,104,138,79,82,101,47,138,154,74,125,181,75,37,74,82,84,95,133,68,118,134,125,139,90,131,118,161,23,87,130,217,189,112,234,185,181,203,217,235,228,154,28,70,172,226,235,255,185,51,52,57,47,33,61,85,56,63,52,76,17,54,57,76,62,56,47,17,59,66,132,103,88,149,3,41,74,62,64,60,111,183,174,132,108,128,140,114,112,147,129,169,139,110,39,108,209,211,100,157,169,134,114,99,120,229,171,91,105,255,244,210,47,74,85,83,83,84,77,64,80,50,78,23,60,80,42,99,124,77,33,34,89,102,73,54,79,36,123,111,9,47,60,109,132,60,78,41,3,104,128,115,133,107,22,92,187,143,116,105,39,185,217,115,199,215,235,235,213,125,155,85,57,234,241,96,103,79,80,87,76,73,69,70,30,93,34,69,59,75,57,74,57,37,42,38,105,122,4,96,66,29,69,65,120,119,110,107,205,86,162,196,205,145,117,126,118,114,111";

            int[] imageSize = Image.Image.getImageSize(s);

            int[] rP = Image.Image.getRPixels(s);
            int[] gP = Image.Image.getGPixels(s);
            int[] bP = Image.Image.getBPixels(s);

            exitGUI();
            Console.WriteLine(s);

            for (int i = 0; i < imageSize[0] * imageSize[1]; i++)
            {
                setPixel(locX + (i - (imageSize[0] * Convert.ToInt32(Math.Floor((double) i / imageSize[0])))), locY + (Convert.ToInt32(Math.Floor((double) i / imageSize[0]))), Color.FromArgb(rP[i], gP[i], bP[i]));
            }
        }

        public static void addMouse(int x, int y)
        {
            setPixel(x + 1, y + 1, Color.White);
            setPixel(x + 1, y + 2, Color.White);
            setPixel(x + 2, y + 3, Color.White);
            setPixel(x + 2, y + 4, Color.White);
            setPixel(x + 3, y + 5, Color.White);
            setPixel(x + 3, y + 6, Color.White);
            setPixel(x + 4, y + 7, Color.White);
            setPixel(x + 4, y + 8, Color.White);
            setPixel(x + 5, y + 9, Color.White);
            setPixel(x + 5, y + 10, Color.White);
            setPixel(x + 6, y + 11, Color.White);
            setPixel(x + 6, y + 12, Color.White);

            setPixel(x + 2, y + 1, Color.White);
            setPixel(x + 3, y + 2, Color.White);
            setPixel(x + 4, y + 2, Color.White);
            setPixel(x + 5, y + 3, Color.White);
            setPixel(x + 6, y + 3, Color.White);
            setPixel(x + 7, y + 4, Color.White);
            setPixel(x + 8, y + 4, Color.White);
            setPixel(x + 9, y + 5, Color.White);
            setPixel(x + 10, y + 5, Color.White);
            setPixel(x + 11, y + 6, Color.White);
            setPixel(x + 12, y + 6, Color.White);

            setPixel(x + 6, y + 12, Color.White);
            setPixel(x + 7, y + 11, Color.White);
            setPixel(x + 8, y + 10, Color.White);
            setPixel(x + 9, y + 9, Color.White);
            setPixel(x + 10, y + 8, Color.White);
            setPixel(x + 11, y + 7, Color.White);
            setPixel(x + 12, y + 6, Color.White);

            setPixel(x, y, Color.Black);
            setPixel(x, y + 1, Color.Black);
            setPixel(x, y + 2, Color.Black);
            setPixel(x + 1, y + 3, Color.Black);
            setPixel(x + 1, y + 4, Color.Black);
            setPixel(x + 2, y + 5, Color.Black);
            setPixel(x + 2, y + 6, Color.Black);
            setPixel(x + 3, y + 7, Color.Black);
            setPixel(x + 3, y + 8, Color.Black);
            setPixel(x + 4, y + 9, Color.Black);
            setPixel(x + 4, y + 10, Color.Black);
            setPixel(x + 5, y + 11, Color.Black);
            setPixel(x + 5, y + 12, Color.Black);
            setPixel(x + 6, y + 13, Color.Black);

            setPixel(x + 1, y, Color.Black);
            setPixel(x + 2, y, Color.Black);
            setPixel(x + 3, y + 1, Color.Black);
            setPixel(x + 4, y + 1, Color.Black);
            setPixel(x + 5, y + 2, Color.Black);
            setPixel(x + 6, y + 2, Color.Black);
            setPixel(x + 7, y + 3, Color.Black);
            setPixel(x + 8, y + 3, Color.Black);
            setPixel(x + 9, y + 4, Color.Black);
            setPixel(x + 10, y + 4, Color.Black);
            setPixel(x + 11, y + 5, Color.Black);
            setPixel(x + 12, y + 5, Color.Black);
            setPixel(x + 13, y + 6, Color.Black);

            setPixel(x + 7, y + 13, Color.Black);
            setPixel(x + 8, y + 12, Color.Black);
            setPixel(x + 9, y + 11, Color.Black);
            setPixel(x + 10, y + 10, Color.Black);
            setPixel(x + 11, y + 9, Color.Black);
            setPixel(x + 12, y + 8, Color.Black);
            setPixel(x + 13, y + 7, Color.Black);
        }

        public static void addFilledRectangle(int x, int y, int w, int h, Color c)
        {
            for (int a = x; a < x + w; a++)
            {
                for (int b = y; b < y + h; b++)
                {
                    setPixel(a, b, c);
                }
            }
        }

        public static void addRectangle(int x, int y, int endX, int endY, Color c)
        {
            for (int a = x; a < endX; a++)
            {
                setPixel(a, y, c);
                setPixel(a, endY, c);
            }
            for (int a = y; a < endY; a++)
            {
                setPixel(x, a, c);
                setPixel(endX, a, c);
            }
            setPixel(endX, endY, c);
        }

        public static void setFullBuffer(Color color)
        {
            for (int y = 0; y < screenH; y++)
            {
                for (int x = 0; x < screenW; x++)
                {
                    setPixel(x, y, color);
                }
            }
        }

        private static int Clamp(int value, int min, int max)
        {
            return (value < min) ? min : (value > max) ? max : value;
        }


        public static int addText(int x, int y, Color c, String s)
        {
            int xLoc = x;
            int yLoc = y;
            for (int i = 0; i < s.Length; i++)
            {
                if (s[i] == '\u000D')
                {
                    yLoc = +40;
                    xLoc = x;
                    continue;
                }

                xLoc = xLoc + typeChar(xLoc, yLoc, c, s[i]);
            }
            return xLoc;
        }

        public static int typeChar(int x, int y, Color c, Char ch)
        {
            switch (ch)
            {
                case 'A':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    return 16;
                case 'a':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x, y + 18, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 10;
                case 'B':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 10, y + 6, c);
                    setPixel(x + 10, y + 8, c);
                    setPixel(x + 10, y + 10, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'b':
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'C':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'c':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'D':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 14, y + 4, c);
                    setPixel(x + 16, y + 6, c);
                    setPixel(x + 16, y + 8, c);
                    setPixel(x + 16, y + 10, c);
                    setPixel(x + 16, y + 12, c);
                    setPixel(x + 16, y + 14, c);
                    setPixel(x + 16, y + 16, c);
                    setPixel(x + 16, y + 18, c);
                    setPixel(x + 14, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    return 20;
                case 'd':
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 10, y + 6, c);
                    setPixel(x + 10, y + 8, c);
                    setPixel(x + 10, y + 10, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'E':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'e':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 18, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'F':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    return 14;
                case 'f':
                    setPixel(x + 12, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 8, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    return 18;
                case 'G':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 8, y + 14, c);
                    setPixel(x + 6, y + 14, c);
                    return 16;
                case 'g':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 10, y + 26, c);
                    setPixel(x + 10, y + 28, c);
                    setPixel(x + 10, y + 30, c);
                    setPixel(x + 10, y + 32, c);
                    setPixel(x + 8, y + 32, c);
                    setPixel(x + 6, y + 32, c);
                    setPixel(x + 4, y + 32, c);
                    setPixel(x + 2, y + 32, c);
                    setPixel(x, y + 32, c);
                    return 14;
                case 'H':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 10, y + 6, c);
                    setPixel(x + 10, y + 8, c);
                    setPixel(x + 10, y + 10, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'h':
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 8, y + 14, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'I':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'i':
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 6;
                case 'J':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'j':
                    setPixel(x + 4, y + 4, c);
                    setPixel(x + 4, y + 6, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 4, y + 26, c);
                    setPixel(x + 4, y + 28, c);
                    setPixel(x + 4, y + 30, c);
                    setPixel(x + 2, y + 32, c);
                    setPixel(x, y + 32, c);
                    setPixel(x - 2, y + 32, c);
                    setPixel(x, y + 32, c);
                    return 14;
                case 'K':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 8, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 4, y + 8, c);
                    setPixel(x + 2, y + 10, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'k':
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 8, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 8, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'L':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'l':
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 6;
                case 'M':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 2, c);
                    setPixel(x + 4, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 8, y + 4, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'm':
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'N':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 2, c);
                    setPixel(x + 2, y + 4, c);
                    setPixel(x + 4, y + 6, c);
                    setPixel(x + 4, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 14, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    return 16;
                case 'n':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'O':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'o':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'P':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    return 16;
                case 'p':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x, y + 26, c);
                    setPixel(x, y + 28, c);
                    setPixel(x, y + 30, c);
                    setPixel(x, y + 32, c);
                    return 14;
                case 'Q':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 6, y + 26, c);
                    setPixel(x + 6, y + 28, c);
                    setPixel(x + 8, y + 28, c);
                    setPixel(x + 10, y + 28, c);
                    setPixel(x + 12, y + 28, c);
                    return 16;
                case 'q':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 10, y + 26, c);
                    setPixel(x + 10, y + 28, c);
                    setPixel(x + 10, y + 30, c);
                    setPixel(x + 10, y + 32, c);
                    return 14;
                case 'R':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 8, y + 14, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'r':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'S':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    return 16;
                case 's':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x, y + 18, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 18, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'T':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case 't':
                    setPixel(x, y + 10, c);
                    setPixel(x + 2, y + 10, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 8, y + 10, c);
                    setPixel(x + 10, y + 10, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case 'U':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'u':
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'V':
                    setPixel(x, y + 2, c);
                    setPixel(x + 8, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x + 8, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 2, y + 10, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    return 12;
                case 'v':
                    setPixel(x, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 8, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case 'W':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'w':
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'X':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x + 2, y + 6, c);
                    setPixel(x + 2, y + 8, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 8, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'x':
                    setPixel(x, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 8, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'Y':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x + 2, y + 4, c);
                    setPixel(x + 2, y + 6, c);
                    setPixel(x + 4, y + 8, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 10, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 10, y + 6, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case 'y':
                    setPixel(x, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 8, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 6, y + 26, c);
                    setPixel(x + 6, y + 28, c);
                    setPixel(x + 6, y + 30, c);
                    setPixel(x + 4, y + 32, c);
                    return 16;
                case 'Z':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 16;
                case 'z':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 16;
                case '0':
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    return 18;
                case '1':
                    setPixel(x, y + 6, c);
                    setPixel(x + 2, y + 4, c);
                    setPixel(x + 4, y + 2, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case '2':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    return 18;
                case '3':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    return 16;
                case '4':
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    return 16;
                case '5':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case '6':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    return 18;
                case '7':
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    return 14;
                case '8':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    return 18;
                case '9':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    return 18;
                case '.':
                    setPixel(x, y + 24, c);
                    return 4;
                case ',':
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 2, y + 26, c);
                    setPixel(x, y + 28, c);
                    return 6;
                case '!':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 24, c);
                    return 4;
                case '?':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case '\u002F':
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case '\u005C':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x + 2, y + 6, c);
                    setPixel(x + 2, y + 8, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 8, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case '-':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    return 12;
                case '+':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 4, y + 8, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    return 12;
                case '=':
                    setPixel(x, y + 10, c);
                    setPixel(x + 2, y + 10, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 8, y + 10, c);
                    setPixel(x, y + 14, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 8, y + 14, c);
                    return 12;
                case ':':
                    setPixel(x + 2, y + 6, c);
                    setPixel(x + 2, y + 18, c);
                    return 8;
                case ' ':
                    return 8;
                case '(':
                    setPixel(x + 4, y, c);
                    setPixel(x + 2, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x + 4, y + 24, c);
                    return 8;
                case ')':
                    setPixel(x, y, c);
                    setPixel(x + 2, y + 2, c);
                    setPixel(x + 4, y + 4, c);
                    setPixel(x + 4, y + 6, c);
                    setPixel(x + 4, y + 8, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 8;
                case '%':
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 4, y + 4, c);
                    setPixel(x + 8, y + 20, c);
                    return 14;
                default:
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    return 16;
            }
        }
    }
}