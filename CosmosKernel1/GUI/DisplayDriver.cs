using Cosmos.System.Graphics;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.ConstrainedExecution;
using System.Runtime.InteropServices;
using System.Text;
using System.Xml.Linq;

namespace CosmosKernel1
{
    class DisplayDriver
    {
        public static int screenW = 800;
        public static int screenH = 600;

        public static Color[] SBuffer = new Color[480000];
        public static Color[] SBufferOld = new Color[480000];

        private static Canvas canvas;

        public static Canvas initScreen()
        {
            canvas = FullScreenCanvas.GetFullScreenCanvas();
            return canvas;
        }

        public static void drawScreen()
        {
            for (int y = 0, h = screenH; y < h; y++)
            {
                for (int x = 0, w = screenW; x < w; x++)
                {
                    if (SBuffer[(y * screenW) + x] == SBufferOld[(y * screenW) + x])
                    {
                        continue;
                    }
                    Pen pen = new Pen(SBuffer[(y * screenW) + x]);
                    canvas.DrawPoint(pen, x, y);
                }
            }
            copyArray(SBuffer, SBufferOld);
        }

        private static void copyArray(Color[] from, Color[] to)
        {
            for (int i = 0, len = from.Length; i < len; i++)
            {
                to[i] = from[i];
            }
        }

        private static void setPixel(int x, int y, Color color)
        {
            SBuffer[(y * screenW) + x] = color;
        }

        public static void addMouse(int x, int y)
        {
            setPixel(x + 1, y + 1, Color.White);
            setPixel(Clamp(x + 2, 0, screenW - 2), y + 1, Color.White);
            setPixel(Clamp(x + 4, 0, screenW - 2), y + 1, Color.White);
            setPixel(Clamp(x + 6, 0, screenW - 2), y + 1, Color.White);
            setPixel(x + 1, Clamp(y + 2, 0, screenH - 2), Color.White);
            setPixel(x + 1, Clamp(y + 4, 0, screenH - 2), Color.White);
            setPixel(x + 1, Clamp(y + 6, 0, screenH - 2), Color.White);
            setPixel(Clamp(x + 2, 0, screenW - 2), Clamp(y + 2, 0, screenH - 2), Color.White);
            setPixel(Clamp(x + 4, 0, screenW - 2), Clamp(y + 4, 0, screenH - 2), Color.White);
            setPixel(Clamp(x + 6, 0, screenW - 2), Clamp(y + 6, 0, screenH - 2), Color.White);
            setPixel(Clamp(x + 8, 0, screenW - 2), Clamp(y + 8, 0, screenH - 2), Color.White);

            setPixel(x, y, Color.Black);
            setPixel(Clamp(x + 2, 0, screenW - 2), y, Color.Black);
            setPixel(Clamp(x + 4, 0, screenW - 2), y, Color.Black);
            setPixel(Clamp(x + 6, 0, screenW - 2), y, Color.Black);
            setPixel(x, Clamp(y + 2, 0, screenH - 2), Color.Black);
            setPixel(x, Clamp(y + 4, 0, screenH - 2), Color.Black);
            setPixel(x, Clamp(y + 6, 0, screenH - 2), Color.Black);
            setPixel(Clamp(x + 3, 0, screenW - 2), Clamp(y + 3, 0, screenH - 2), Color.Black);
            setPixel(Clamp(x + 5, 0, screenW - 2), Clamp(y + 5, 0, screenH - 2), Color.Black);
            setPixel(Clamp(x + 7, 0, screenW - 2), Clamp(y + 7, 0, screenH - 2), Color.Black);
            setPixel(Clamp(x + 9, 0, screenW - 2), Clamp(y + 9, 0, screenH - 2), Color.Black);
        }

        public static void addFilledRectangle(int x, int y, int w, int h, Color c)
        {
            for (int a = x; a < x + w; a++)
            {
                for (int b = y; b < y + h; b++)
                {
                    setPixel(Clamp(a, 0, screenW - 1), Clamp(b, 0, screenH - 1), c);
                }
            }
        }

        public static void addRectangle(int x, int y, int endX, int endY, Color c)
        {
            for (int a = x; a < endX; a++)
            {
                setPixel(Clamp(a, 0, screenW - 1), y, c);
                setPixel(Clamp(a, 0, screenW - 1), endY, c);
            }
            for (int a = y; a < endY; a++)
            {
                setPixel(x, Clamp(a, 0, screenH - 1), c);
                setPixel(endX, Clamp(a, 0, screenH - 1), c);
            }
            setPixel(endX, endY, c);
        }

        public static void setFullBuffer(Color color)
        {
            for (int y = 0; y < screenH; y++)
            {
                for (int x = 0; x < screenW; x++)
                {
                    setPixel(x, y, color);
                }
            }
        }

        private static int Clamp(int value, int min, int max)
        {
            return (value < min) ? min : (value > max) ? max : value;
        }


        public static int addText(int x, int y, Color c, String s)
        {
            int xLoc = x;
            int yLoc = y;
            for (int i = 0; i < s.Length; i++)
            {
                if (s[i] == '\u000D')
                {
                    yLoc = +40;
                    xLoc = x;
                    continue;
                }

                xLoc = xLoc + typeChar(xLoc, yLoc, c, s[i]);
            }
            return xLoc;
        }

        public static int typeChar(int x, int y, Color c, Char ch)
        {
            switch (ch)
            {
                case 'A':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    return 16;
                case 'a':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x, y + 18, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 10;
                case 'B':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 10, y + 6, c);
                    setPixel(x + 10, y + 8, c);
                    setPixel(x + 10, y + 10, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'b':
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'C':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'c':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'D':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 14, y + 4, c);
                    setPixel(x + 16, y + 6, c);
                    setPixel(x + 16, y + 8, c);
                    setPixel(x + 16, y + 10, c);
                    setPixel(x + 16, y + 12, c);
                    setPixel(x + 16, y + 14, c);
                    setPixel(x + 16, y + 16, c);
                    setPixel(x + 16, y + 18, c);
                    setPixel(x + 14, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    return 20;
                case 'd':
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 10, y + 6, c);
                    setPixel(x + 10, y + 8, c);
                    setPixel(x + 10, y + 10, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'E':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'e':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 18, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'F':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    return 14;
                case 'f':
                    setPixel(x + 12, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 8, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    return 18;
                case 'G':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 8, y + 14, c);
                    setPixel(x + 6, y + 14, c);
                    return 16;
                case 'g':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 10, y + 26, c);
                    setPixel(x + 10, y + 28, c);
                    setPixel(x + 10, y + 30, c);
                    setPixel(x + 10, y + 32, c);
                    setPixel(x + 8, y + 32, c);
                    setPixel(x + 6, y + 32, c);
                    setPixel(x + 4, y + 32, c);
                    setPixel(x + 2, y + 32, c);
                    setPixel(x, y + 32, c);
                    return 14;
                case 'H':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 10, y + 6, c);
                    setPixel(x + 10, y + 8, c);
                    setPixel(x + 10, y + 10, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'h':
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 8, y + 14, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'I':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'i':
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 6;
                case 'J':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'j':
                    setPixel(x + 4, y + 4, c);
                    setPixel(x + 4, y + 6, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 4, y + 26, c);
                    setPixel(x + 4, y + 28, c);
                    setPixel(x + 4, y + 30, c);
                    setPixel(x + 2, y + 32, c);
                    setPixel(x, y + 32, c);
                    setPixel(x - 2, y + 32, c);
                    setPixel(x, y + 32, c);
                    return 14;
                case 'K':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 8, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 4, y + 8, c);
                    setPixel(x + 2, y + 10, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'k':
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 8, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 8, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'L':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'l':
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 6;
                case 'M':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 2, c);
                    setPixel(x + 4, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 8, y + 4, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'm':
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'N':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 2, c);
                    setPixel(x + 2, y + 4, c);
                    setPixel(x + 4, y + 6, c);
                    setPixel(x + 4, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 14, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    return 16;
                case 'n':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'O':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'o':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'P':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    return 16;
                case 'p':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x, y + 26, c);
                    setPixel(x, y + 28, c);
                    setPixel(x, y + 30, c);
                    setPixel(x, y + 32, c);
                    return 14;
                case 'Q':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 6, y + 26, c);
                    setPixel(x + 6, y + 28, c);
                    setPixel(x + 8, y + 28, c);
                    setPixel(x + 10, y + 28, c);
                    setPixel(x + 12, y + 28, c);
                    return 16;
                case 'q':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 10, y + 26, c);
                    setPixel(x + 10, y + 28, c);
                    setPixel(x + 10, y + 30, c);
                    setPixel(x + 10, y + 32, c);
                    return 14;
                case 'R':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 8, y + 14, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'r':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'S':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    return 16;
                case 's':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x, y + 18, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 18, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x + 10, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case 'T':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case 't':
                    setPixel(x, y + 10, c);
                    setPixel(x + 2, y + 10, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 8, y + 10, c);
                    setPixel(x + 10, y + 10, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case 'U':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'u':
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'V':
                    setPixel(x, y + 2, c);
                    setPixel(x + 8, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x + 8, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 2, y + 10, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    return 12;
                case 'v':
                    setPixel(x, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 8, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case 'W':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'w':
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    return 16;
                case 'X':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x + 2, y + 6, c);
                    setPixel(x + 2, y + 8, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 8, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'x':
                    setPixel(x, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 4, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 8, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case 'Y':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x + 2, y + 4, c);
                    setPixel(x + 2, y + 6, c);
                    setPixel(x + 4, y + 8, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 10, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 10, y + 6, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case 'y':
                    setPixel(x, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 2, y + 16, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 10, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 4, y + 22, c);
                    setPixel(x + 8, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 6, y + 26, c);
                    setPixel(x + 6, y + 28, c);
                    setPixel(x + 6, y + 30, c);
                    setPixel(x + 4, y + 32, c);
                    return 16;
                case 'Z':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 16;
                case 'z':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 4, y + 20, c);
                    setPixel(x + 2, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 16;
                case '0':
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    return 18;
                case '1':
                    setPixel(x, y + 6, c);
                    setPixel(x + 2, y + 4, c);
                    setPixel(x + 4, y + 2, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 6, y + 2, c);
                    setPixel(x + 6, y + 4, c);
                    setPixel(x + 6, y + 6, c);
                    setPixel(x + 6, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 22, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case '2':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    return 18;
                case '3':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    return 16;
                case '4':
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    return 16;
                case '5':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case '6':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    return 18;
                case '7':
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    return 14;
                case '8':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    return 18;
                case '9':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 4, y + 24, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 8, y + 24, c);
                    setPixel(x + 10, y + 24, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x + 12, y + 24, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 10, y + 12, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    return 18;
                case '.':
                    setPixel(x, y + 24, c);
                    return 4;
                case ',':
                    setPixel(x + 2, y + 24, c);
                    setPixel(x + 2, y + 26, c);
                    setPixel(x, y + 28, c);
                    return 6;
                case '!':
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y + 12, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 24, c);
                    return 4;
                case '?':
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 24, c);
                    return 16;
                case '\u002F':
                    setPixel(x + 10, y + 2, c);
                    setPixel(x + 10, y + 4, c);
                    setPixel(x + 8, y + 6, c);
                    setPixel(x + 8, y + 8, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    setPixel(x + 2, y + 18, c);
                    setPixel(x + 2, y + 20, c);
                    setPixel(x, y + 22, c);
                    setPixel(x, y + 24, c);
                    return 14;
                case '\u005C':
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x + 2, y + 6, c);
                    setPixel(x + 2, y + 8, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 8, y + 18, c);
                    setPixel(x + 8, y + 20, c);
                    setPixel(x + 10, y + 22, c);
                    setPixel(x + 10, y + 24, c);
                    return 14;
                case '-':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    return 12;
                case '+':
                    setPixel(x, y + 12, c);
                    setPixel(x + 2, y + 12, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 6, y + 12, c);
                    setPixel(x + 8, y + 12, c);
                    setPixel(x + 4, y + 8, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 4, y + 12, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 4, y + 16, c);
                    return 12;
                case '=':
                    setPixel(x, y + 10, c);
                    setPixel(x + 2, y + 10, c);
                    setPixel(x + 4, y + 10, c);
                    setPixel(x + 6, y + 10, c);
                    setPixel(x + 8, y + 10, c);
                    setPixel(x, y + 14, c);
                    setPixel(x + 2, y + 14, c);
                    setPixel(x + 4, y + 14, c);
                    setPixel(x + 6, y + 14, c);
                    setPixel(x + 8, y + 14, c);
                    return 12;
                case ':':
                    setPixel(x + 2, y + 6, c);
                    setPixel(x + 2, y + 18, c);
                    return 8;
                case ' ':
                    return 8;
                default:
                    setPixel(x, y, c);
                    setPixel(x + 2, y, c);
                    setPixel(x + 4, y, c);
                    setPixel(x + 6, y, c);
                    setPixel(x + 8, y, c);
                    setPixel(x + 10, y, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 10, y + 16, c);
                    setPixel(x + 8, y + 16, c);
                    setPixel(x + 6, y + 16, c);
                    setPixel(x + 6, y + 18, c);
                    setPixel(x + 6, y + 20, c);
                    setPixel(x + 6, y + 24, c);
                    setPixel(x + 12, y, c);
                    setPixel(x + 12, y + 2, c);
                    setPixel(x + 12, y + 4, c);
                    setPixel(x + 12, y + 6, c);
                    setPixel(x + 12, y + 8, c);
                    setPixel(x + 12, y + 10, c);
                    setPixel(x + 12, y + 12, c);
                    setPixel(x + 12, y + 14, c);
                    setPixel(x + 12, y + 16, c);
                    setPixel(x + 12, y + 18, c);
                    setPixel(x + 12, y + 20, c);
                    setPixel(x + 12, y + 22, c);
                    setPixel(x, y, c);
                    setPixel(x, y + 2, c);
                    setPixel(x, y + 4, c);
                    setPixel(x, y + 6, c);
                    setPixel(x, y + 8, c);
                    setPixel(x, y + 10, c);
                    setPixel(x, y, c);
                    setPixel(x, y + 14, c);
                    setPixel(x, y + 16, c);
                    setPixel(x, y + 18, c);
                    setPixel(x, y + 20, c);
                    setPixel(x, y + 22, c);
                    return 16;
            }
        }
    }
}